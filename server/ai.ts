import { GoogleGenAI } from "@google/genai";

const ai = new GoogleGenAI({ apiKey: process.env.GEMINI_API_KEY || "" });

export interface BusinessAnalysis {
  industry: string;
  challenges: string[];
  goals: string[];
  relevantCategories: string[];
  keywords: string[];
}

// Comprehensive business patterns for intelligent module matching
const BUSINESS_PATTERNS = {
  restaurant: {
    keywords: ["—Ä–µ—Å—Ç–æ—Ä–∞–Ω", "–ø–∏—Ü—Ü–µ—Ä–∏—è", "–∫–∞—Ñ–µ", "–µ–¥–∞", "–¥–æ—Å—Ç–∞–≤–∫–∞", "–∑–∞–∫–∞–∑", "–º–µ–Ω—é", "–æ—Ñ–∏—Ü–∏–∞–Ω—Ç", "–±–∞–ª–∏", "pizza"],
    categories: ["E-COMMERCE", "–ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï", "–ú–ê–†–ö–ï–¢–ò–ù–ì", "CRM"],
    recommendedModules: [165, 145, 5, 120, 123] // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–º, —Å–∏—Å—Ç–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤, –ø–ª–∞—Ç–µ–∂–∏, –∏–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–∏–µ –ø–ª–∞—Ç–µ–∂–∏ –¥–ª—è –ë–∞–ª–∏
  },
  travel: {
    keywords: ["—Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ", "—Ç—É—Ä—ã", "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–æ—Ç–¥—ã—Ö", "—ç–∫—Å–∫—É—Ä—Å–∏–∏", "—Ç—É—Ä—Ñ–∏—Ä–º–∞", "—Ç—É—Ä–∏–∑–º", "—Ç—É—Ä", "–≥–∏–¥"],
    categories: ["–ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï", "CRM", "–ú–ê–†–ö–ï–¢–ò–ù–ì", "–§–ò–ù–¢–ï–•"],
    recommendedModules: [56, 57, 108, 18, 25] // –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–æ–≤, –∫–∞–ª–µ–Ω–¥–∞—Ä—å, CRM, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥
  },
  retail: {
    keywords: ["–º–∞–≥–∞–∑–∏–Ω", "—Ç–æ–≤–∞—Ä", "–ø—Ä–æ–¥–∞–∂–∏", "—Å–∫–ª–∞–¥", "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å", "–ø–æ–∫—É–ø–∞—Ç–µ–ª—å", "–æ–¥–µ–∂–¥–∞", "–æ–±—É–≤—å"],
    categories: ["E-COMMERCE", "–ú–ê–†–ö–ï–¢–ò–ù–ì", "CRM", "–õ–û–ì–ò–°–¢–ò–ö–ê"],
    recommendedModules: [1, 2, 3, 5, 21] // –í–∏—Ç—Ä–∏–Ω–∞, –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ä–∑–∏–Ω–∞, –ø–ª–∞—Ç–µ–∂–∏
  },
  hotel: {
    keywords: ["–æ—Ç–µ–ª—å", "–≥–æ—Å—Ç–∏–Ω–∏—Ü", "–Ω–æ–º–µ—Ä", "–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "–∑–∞—Å–µ–ª–µ–Ω–∏–µ", "—Ç—É—Ä–∏–∑–º", "—Ö–æ—Å—Ç–µ–ª"],
    categories: ["–ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï", "CRM", "–ú–ê–†–ö–ï–¢–ò–ù–ì", "–§–ò–ù–¢–ï–•"],
    recommendedModules: [55, 56, 57, 18, 108] // –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –∫–∞–ª–µ–Ω–¥–∞—Ä—å, CRM
  },
  fitness: {
    keywords: ["—Ñ–∏—Ç–Ω–µ—Å", "—Å–ø–æ—Ä—Ç–∑–∞–ª", "—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–∞–±–æ–Ω–µ–º–µ–Ω—Ç", "–∑–∞–ª", "—Ç—Ä–µ–Ω–µ—Ä", "–π–æ–≥–∞", "—Å–ø–æ—Ä—Ç"],
    categories: ["–ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï", "CRM", "–ú–ê–†–ö–ï–¢–ò–ù–ì", "–§–ò–¢–ù–ï–°"],
    recommendedModules: [221, 146, 25, 108, 18] // –§–∏—Ç–Ω–µ—Å —Ü–µ–Ω—Ç—Ä, –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π, –ª–æ—è–ª—å–Ω–æ—Å—Ç—å
  },
  beauty: {
    keywords: ["—Å–∞–ª–æ–Ω", "–∫—Ä–∞—Å–æ—Ç–∞", "—Å—Ç—Ä–∏–∂–∫–∞", "–º–∞–Ω–∏–∫—é—Ä", "—É—Å–ª—É–≥–∞", "–º–∞—Å—Ç–µ—Ä", "–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∞—è", "–∫–æ—Å–º–µ—Ç–æ–ª–æ–≥"],
    categories: ["–ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï", "CRM", "–ú–ê–†–ö–ï–¢–ò–ù–ì"],
    recommendedModules: [222, 146, 18, 108, 25] // –°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã, –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ª—É–≥, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥
  },
  medical: {
    keywords: ["–∫–ª–∏–Ω–∏–∫–∞", "–≤—Ä–∞—á", "–ø—Ä–∏–µ–º", "–ø–∞—Ü–∏–µ–Ω—Ç", "–º–µ–¥–∏—Ü–∏–Ω–∞", "–ª–µ—á–µ–Ω–∏–µ", "—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥", "–ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞"],
    categories: ["–ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï", "CRM", "–ú–ï–î–ò–¶–ò–ù–ê"],
    recommendedModules: [219, 56, 57, 18] // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∫–ª–∏–Ω–∏–∫–∞, –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º
  },
  education: {
    keywords: ["—à–∫–æ–ª–∞", "–∫—É—Ä—Å—ã", "–æ–±—É—á–µ–Ω–∏–µ", "—Å—Ç—É–¥–µ–Ω—Ç", "–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", "—É—Ä–æ–∫", "—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç", "–∏–Ω—Å—Ç–∏—Ç—É—Ç"],
    categories: ["–û–ë–†–ê–ó–û–í–ê–ù–ò–ï", "CRM", "–ú–ê–†–ö–ï–¢–ò–ù–ì"],
    recommendedModules: [229, 56, 18, 108] // –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä, CRM
  },
  auto: {
    keywords: ["–∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å", "—Ä–µ–º–æ–Ω—Ç", "–º–∞—à–∏–Ω–∞", "–∞–≤—Ç–æ–º–æ–±–∏–ª—å", "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ", "—à–∏–Ω–æ–º–æ–Ω—Ç–∞–∂", "–∞–≤—Ç–æ–º–æ–π–∫–∞"],
    categories: ["–ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï", "CRM", "–ê–í–¢–û–°–ï–†–í–ò–°"],
    recommendedModules: [223, 56, 18, 108] // –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å, –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
  },
  real_estate: {
    keywords: ["–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å", "–∫–≤–∞—Ä—Ç–∏—Ä–∞", "–∞—Ä–µ–Ω–¥–∞", "–ø—Ä–æ–¥–∞–∂–∞", "—Ä–∏—ç–ª—Ç–æ—Ä", "–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ", "–¥–æ–º"],
    categories: ["CRM", "–ú–ê–†–ö–ï–¢–ò–ù–ì", "–ù–ï–î–í–ò–ñ–ò–ú–û–°–¢–¨"],
    recommendedModules: [230, 108, 18, 46] // –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å, CRM, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥
  },
  logistics: {
    keywords: ["–ª–æ–≥–∏—Å—Ç–∏–∫–∞", "–¥–æ—Å—Ç–∞–≤–∫–∞", "—Å–∫–ª–∞–¥", "–≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏", "–∫—É—Ä—å–µ—Ä", "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç"],
    categories: ["–õ–û–ì–ò–°–¢–ò–ö–ê", "CRM", "E-COMMERCE"],
    recommendedModules: [231, 5, 108, 18] // –õ–æ–≥–∏—Å—Ç–∏–∫–∞, —Ç—Ä–µ–∫–∏–Ω–≥, CRM
  },
  legal: {
    keywords: ["—é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ", "–∞–¥–≤–æ–∫–∞—Ç", "–ø—Ä–∞–≤–æ", "–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏", "—é—Ä–∏—Å—Ç", "–Ω–æ—Ç–∞—Ä–∏—É—Å"],
    categories: ["CRM", "–î–û–ö–£–ú–ï–ù–¢–û–û–ë–û–†–û–¢", "–ú–ê–†–ö–ï–¢–ò–ù–ì"],
    recommendedModules: [225, 108, 18, 238] // –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏, CRM, –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç
  },
  consulting: {
    keywords: ["–∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥", "–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏", "–±–∏–∑–Ω–µ—Å", "—Å—Ç—Ä–∞—Ç–µ–≥–∏—è", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–∞–Ω–∞–ª–∏—Ç–∏–∫–∞"],
    categories: ["CRM", "–ú–ê–†–ö–ï–¢–ò–ù–ì", "–ê–ù–ê–õ–ò–¢–ò–ö–ê"],
    recommendedModules: [108, 18, 46, 25] // CRM, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
  },
  event: {
    keywords: ["–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", "—Å–æ–±—ã—Ç–∏–µ", "–ø—Ä–∞–∑–¥–Ω–∏–∫", "—Å–≤–∞–¥—å–±–∞", "–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è", "–±–∞–Ω–∫–µ—Ç"],
    categories: ["–ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï", "CRM", "–ú–ê–†–ö–ï–¢–ò–ù–ì"],
    recommendedModules: [56, 57, 108, 18] // –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π, CRM
  },
  delivery: {
    keywords: ["–¥–æ—Å—Ç–∞–≤–∫–∞", "–∫—É—Ä—å–µ—Ä", "—ç–∫—Å–ø—Ä–µ—Å—Å", "–ø–æ—Å—ã–ª–∫–∞", "–æ—Ç–ø—Ä–∞–≤–∫–∞", "—Å–ª—É–∂–±–∞"],
    categories: ["–õ–û–ì–ò–°–¢–ò–ö–ê", "E-COMMERCE", "CRM"],
    recommendedModules: [5, 231, 108, 18] // –¢—Ä–µ–∫–∏–Ω–≥, –ª–æ–≥–∏—Å—Ç–∏–∫–∞, CRM
  }
};

export async function analyzeBusinessContext(messages: string[]): Promise<BusinessAnalysis> {
  console.log("üß† Analyzing business context with Gemini AI...");
  
  const conversationText = messages.join("\n");
  
  const prompt = `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä–∞–∑–≥–æ–≤–æ—Ä —Å –∫–ª–∏–µ–Ω—Ç–æ–º –∏ –æ–ø—Ä–µ–¥–µ–ª–∏:

–†–ê–ó–ì–û–í–û–†:
${conversationText}

–û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
{
  "industry": "—Ç–∏–ø –±–∏–∑–Ω–µ—Å–∞ (restaurant, travel, retail, beauty, fitness, medical, education, auto, real_estate, logistics, legal –∏–ª–∏ general)",
  "challenges": ["–æ—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–∑–æ–≤—ã –±–∏–∑–Ω–µ—Å–∞"],
  "goals": ["—Ü–µ–ª–∏ –∏ –∑–∞–¥–∞—á–∏"],
  "relevantCategories": ["–ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–æ–¥—É–ª–µ–π"],
  "keywords": ["–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞"]
}`;

  try {
    const response = await ai.models.generateContent({
      model: "gemini-2.5-flash",
      config: {
        responseMimeType: "application/json",
      },
      contents: prompt,
    });

    const result = JSON.parse(response.text || "{}");
    console.log(`‚úÖ Gemini analysis complete: ${result.industry}`);
    return result;
  } catch (error) {
    console.error("‚ùå Gemini analysis failed:", error);
    // Fallback to simple detection
    return {
      industry: "general",
      challenges: ["–û–±—â–∏–µ –±–∏–∑–Ω–µ—Å-–∑–∞–¥–∞—á–∏"],
      goals: ["–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"],
      relevantCategories: ["E-COMMERCE", "–ú–ê–†–ö–ï–¢–ò–ù–ì", "CRM"],
      keywords: []
    };
  }
}

export async function generateAIResponse(
  messages: { role: "user" | "assistant"; content: string }[],
  alreadyShownModules: number[] = [],
): Promise<{ response: string; recommendedModules: number[] }> {
  try {
    const { storage } = await import("./storage");
    const allModules = await storage.getAllModules();
    console.log(`ü§ñ AI processing ${allModules.length} total modules.`);

    // Stage 1: Smart business analysis
    const messageTexts = messages.map(m => `${m.role}: ${m.content}`);
    const analysis = await analyzeBusinessContext(messageTexts);
    
    console.log(`üß† Stage 2: Business type detected as: ${analysis.industry}`);
    
    // Stage 2: Get business pattern recommendations
    const businessPattern = BUSINESS_PATTERNS[analysis.industry as keyof typeof BUSINESS_PATTERNS];
    let recommendedModuleNumbers: number[] = [];
    
    if (businessPattern) {
      recommendedModuleNumbers = businessPattern.recommendedModules
        .filter(num => !alreadyShownModules.includes(num))
        .slice(0, 3); // –ú–∞–∫—Å–∏–º—É–º 3 –º–æ–¥—É–ª—è –∑–∞ —Ä–∞–∑
      console.log(`üéØ Using business pattern modules for ${analysis.industry}:`, recommendedModuleNumbers);
    } else {
      // Fallback –¥–ª—è –æ–±—â–∏—Ö –±–∏–∑–Ω–µ—Å–æ–≤
      recommendedModuleNumbers = [1, 5, 18].filter(num => !alreadyShownModules.includes(num));
    }
    
    console.log(`üéØ Stage 3: Selected modules: ${recommendedModuleNumbers}`);
    
    // Stage 3: Get actual module data and create descriptions
    const recommendedModules = allModules.filter(module => 
      recommendedModuleNumbers.includes(module.number)
    );
    
    // Create smart, contextual descriptions
    const responseLines = recommendedModules.map(module => {
      let contextualDescription = "";
      
      // Create business-specific descriptions
      switch (analysis.industry) {
        case "restaurant":
          if (module.number === 165) contextualDescription = "–ü–æ–ª–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–º: –º–µ–Ω—é, –∑–∞–∫–∞–∑—ã, –ø–µ—Ä—Å–æ–Ω–∞–ª –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ –æ–¥–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.";
          else if (module.number === 145) contextualDescription = "–û—Ä–≥–∞–Ω–∏–∑—É–µ—Ç –ø—Ä–∏–µ–º –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É –∏ —Å–∞–º–æ–≤—ã–≤–æ–∑, —É–ø—Ä–∞–≤–ª—è—è —Å—Ç–∞—Ç—É—Å–∞–º–∏ –æ—Ç –≥–æ—Ç–æ–≤–∫–∏ –¥–æ –≤—Ä—É—á–µ–Ω–∏—è.";
          else if (module.number === 5) contextualDescription = "–ü–æ–∑–≤–æ–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞–º –æ–ø–ª–∞—á–∏–≤–∞—Ç—å –∑–∞–∫–∞–∑—ã –æ–Ω–ª–∞–π–Ω –∫–∞—Ä—Ç–æ–π –∏–ª–∏ —á–µ—Ä–µ–∑ Telegram Pay.";
          else if (module.number === 120) contextualDescription = "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –∏–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–∏–º–∏ –ø–ª–∞—Ç–µ–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ GoPay –∏ OVO –¥–ª—è –ë–∞–ª–∏.";
          else if (module.number === 123) contextualDescription = "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ—Å—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ DANA –∏ LinkAja –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ –ò–Ω–¥–æ–Ω–µ–∑–∏–∏.";
          break;
          
        case "travel":
          if (module.number === 56) contextualDescription = "–°–∏—Å—Ç–µ–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—É—Ä–æ–≤ –∏ —ç–∫—Å–∫—É—Ä—Å–∏–π —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏.";
          else if (module.number === 57) contextualDescription = "–ö–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º.";
          else if (module.number === 108) contextualDescription = "CRM –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏ —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ –∏ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–µ–∑–¥–æ–∫.";
          else if (module.number === 18) contextualDescription = "A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.";
          else if (module.number === 25) contextualDescription = "–ü—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞.";
          break;
          
        case "beauty":
          if (module.number === 222) contextualDescription = "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —É—Å–ª—É–≥ —Å–∞–ª–æ–Ω–∞ —Å 3D-–æ–±–∑–æ—Ä–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ AR-–ø—Ä–∏–º–µ—Ä–∫–æ–π.";
          else if (module.number === 146) contextualDescription = "–°–∏—Å—Ç–µ–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —É –º–∞—Å—Ç–µ—Ä–æ–≤ —Å –≤—ã–±–æ—Ä–æ–º —É—Å–ª—É–≥ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.";
          else if (module.number === 18) contextualDescription = "A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ü–∏–π –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤.";
          else if (module.number === 108) contextualDescription = "CRM –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤, –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –ø–æ—Å–µ—â–µ–Ω–∏–π.";
          else if (module.number === 25) contextualDescription = "–ü—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ —Å –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å–∫–∏–¥–∫–∞–º–∏ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.";
          break;
          
        case "fitness":
          if (module.number === 221) contextualDescription = "–ö–∞—Ç–∞–ª–æ–≥ —Ñ–∏—Ç–Ω–µ—Å –ø—Ä–æ–≥—Ä–∞–º–º –∏ —É—Å–ª—É–≥ —Å AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.";
          else if (module.number === 146) contextualDescription = "–°–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ –≥—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.";
          else if (module.number === 25) contextualDescription = "–ü—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ —Å –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞–º–∏ –∏ –±–æ–Ω—É—Å–∞–º–∏ –∑–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.";
          else if (module.number === 108) contextualDescription = "CRM –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º.";
          else if (module.number === 18) contextualDescription = "A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ –ø—Ä–æ–≥—Ä–∞–º–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.";
          break;
          
        case "retail":
          if (module.number === 1) contextualDescription = "–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—É—é –≤–∏—Ç—Ä–∏–Ω—É —Ç–æ–≤–∞—Ä–æ–≤ —Å —É–º–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏ –ø–æ–∏—Å–∫–æ–º.";
          else if (module.number === 2) contextualDescription = "–î–µ—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ñ–æ—Ç–æ, –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏.";
          else if (module.number === 3) contextualDescription = "–£–º–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∏ –±—ã—Å—Ç—Ä—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–æ–≤.";
          break;
          
        case "hotel":
          if (module.number === 55) contextualDescription = "–°–∏—Å—Ç–µ–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏ —Ç–∞—Ä–∏—Ñ–∞–º–∏.";
          else if (module.number === 56) contextualDescription = "–ö–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å—é –Ω–æ–º–µ—Ä–æ–≤.";
          break;
          
        default:
          contextualDescription = module.description.length > 100 ? 
            module.description.substring(0, 97) + "..." : module.description;
      }
      
      if (!contextualDescription) {
        contextualDescription = module.description.length > 80 ? 
          module.description.substring(0, 77) + "..." : module.description;
      }
      
      return `[MODULE:${module.number}] ${contextualDescription}`;
    });
    
    console.log("‚úÖ Stage 4: Generated contextual recommendations");
    
    return {
      response: responseLines.join("\n"),
      recommendedModules: recommendedModuleNumbers,
    };

  } catch (error) {
    console.error("AI Main Logic Error:", error);
    return {
      response: "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞.",
      recommendedModules: [],
    };
  }
}