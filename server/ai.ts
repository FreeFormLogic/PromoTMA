const GEMINI_API_KEY = process.env.GOOGLE_API_KEY;

if (!GEMINI_API_KEY) {
  console.error('GOOGLE_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
}

interface BusinessAnalysis {
  industry: string;
  size: string;
  challenges: string[];
  goals: string[];
  relevantCategories: string[];
  keywords: string[];
  persona: string;
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –±–∏–∑–Ω–µ—Å–∞
function analyzeBusinessFromText(text: string): BusinessAnalysis {
  const lowerText = text.toLowerCase();
  
  // –í—Å–µ–≥–¥–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
  const keywords = text.split(/\s+/).filter(word => word.length > 2);
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω–¥—É—Å—Ç—Ä–∏—é –∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  let industry = 'universal';
  let persona = text.slice(0, 50); // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º –∑–∞–ø—Ä–æ—Å –∫–∞–∫ –ø–µ—Ä—Å–æ–Ω—É
  let relevantCategories: string[] = ['E-COMMERCE', 'MARKETING', 'CRM', '–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–ï–†–í–ò–°–´'];
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Ä–∞—Å–ª–µ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –µ—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
  if (lowerText.includes('—Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ') || lowerText.includes('—Ç—É—Ä–∏–∑–º') || lowerText.includes('—Ç—É—Ä') ||
      lowerText.includes('–ø—É—Ç–µ—à–µ—Å—Ç–≤') || lowerText.includes('–æ—Ç–µ–ª') || lowerText.includes('hotel')) {
    industry = 'tourism';
    relevantCategories.unshift('–û–¢–†–ê–°–õ–ï–í–´–ï –†–ï–®–ï–ù–ò–Ø');
  } else if (lowerText.includes('–ø–∏—Ü—Ü') || lowerText.includes('—Ä–µ—Å—Ç–æ—Ä–∞–Ω') || lowerText.includes('–∫–∞—Ñ–µ') || 
             lowerText.includes('—Å—É—à–∏') || lowerText.includes('–¥–æ—Å—Ç–∞–≤–∫–∞') || lowerText.includes('–µ–¥–∞') ||
             lowerText.includes('–±–∞—Ä') || lowerText.includes('—Ñ–∞—Å—Ç—Ñ—É–¥') || lowerText.includes('—Å—Ç–æ–ª–æ–≤')) {
    industry = 'restaurant';
    relevantCategories.unshift('–û–¢–†–ê–°–õ–ï–í–´–ï –†–ï–®–ï–ù–ò–Ø');
  } else if (lowerText.includes('—Å–∞–ª–æ–Ω') || lowerText.includes('–∫—Ä–∞—Å–æ—Ç') || lowerText.includes('–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä') ||
             lowerText.includes('—Å–ø–∞') || lowerText.includes('–º–∞–Ω–∏–∫—é—Ä') || lowerText.includes('–∫–æ—Å–º–µ—Ç–æ–ª–æ–≥')) {
    industry = 'beauty';
    relevantCategories.unshift('–û–¢–†–ê–°–õ–ï–í–´–ï –†–ï–®–ï–ù–ò–Ø');
  } else if (lowerText.includes('–º–µ–¥–∏—Ü–∏–Ω') || lowerText.includes('–∫–ª–∏–Ω–∏–∫') || lowerText.includes('–≤—Ä–∞—á') ||
             lowerText.includes('—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥') || lowerText.includes('–±–æ–ª—å–Ω–∏—Ü') || lowerText.includes('–∑–¥–æ—Ä–æ–≤')) {
    industry = 'medical';
    relevantCategories.unshift('–û–¢–†–ê–°–õ–ï–í–´–ï –†–ï–®–ï–ù–ò–Ø');
  } else if (lowerText.includes('–º–∞–≥–∞–∑–∏–Ω') || lowerText.includes('shop') || lowerText.includes('–±—É—Ç–∏–∫') ||
             lowerText.includes('—Ç–æ—Ä–≥–æ–≤') || lowerText.includes('–ø—Ä–æ–¥–∞–∂')) {
    industry = 'retail';
    relevantCategories = ['E-COMMERCE', 'MARKETING', 'CRM'];
  } else if (lowerText.includes('–ø—Ä–∏—é—Ç') || lowerText.includes('–±–ª–∞–≥–æ—Ç–≤–æ—Ä') || lowerText.includes('—Ñ–æ–Ω–¥') ||
             lowerText.includes('–≤–æ–ª–æ–Ω—Ç–µ—Ä') || lowerText.includes('–ø–æ–º–æ')) {
    industry = 'nonprofit';
    relevantCategories = ['CRM', 'MARKETING', '–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–ï–†–í–ò–°–´'];
  }
  
  return {
    industry,
    size: 'medium',
    challenges: [],
    goals: [],
    relevantCategories,
    keywords,
    persona
  };
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–¥—Å—á–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞
function calculateModuleRelevance(module: any, analysis: BusinessAnalysis, originalText: string): number {
  let score = 0;
  const userText = originalText.toLowerCase();
  const moduleText = `${module.name} ${module.description} ${module.benefits}`.toLowerCase();
  
  // 1. –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
  const userWords = userText.split(/\s+/).filter(word => word.length > 2);
  userWords.forEach(word => {
    if (moduleText.includes(word)) {
      score += 30; // –ë–∞–∑–æ–≤—ã–µ –±–∞–ª–ª—ã –∑–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
      // –î–≤–æ–π–Ω—ã–µ –±–∞–ª–ª—ã –µ—Å–ª–∏ —Å–ª–æ–≤–æ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –º–æ–¥—É–ª—è
      if (module.name.toLowerCase().includes(word)) {
        score += 30;
      }
    }
  });
  
  // 2. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞
  if (analysis.relevantCategories.includes(module.category)) {
    // –í—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –ø–µ—Ä–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–æ–±—ã—á–Ω–æ –æ—Ç—Ä–∞—Å–ª–µ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è)
    const categoryIndex = analysis.relevantCategories.indexOf(module.category);
    score += (100 - categoryIndex * 20);
  }
  
  // 3. –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∏–Ω–¥—É—Å—Ç—Ä–∏–π
  if (module.category === '–û–¢–†–ê–°–õ–ï–í–´–ï –†–ï–®–ï–ù–ò–Ø') {
    if (analysis.industry === 'tourism' && module.number === 261) {
      score += 500; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è —Ç—É—Ä–∏–∑–º–∞
    } else if (analysis.industry === 'restaurant' && [236, 237, 238].includes(module.number)) {
      score += 400; // –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
    } else if (analysis.industry === 'beauty' && module.number === 240) {
      score += 400; // –î–ª—è —Å–∞–ª–æ–Ω–æ–≤ –∫—Ä–∞—Å–æ—Ç—ã
    } else if (analysis.industry === 'medical' && module.number === 239) {
      score += 400; // –î–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∫–ª–∏–Ω–∏–∫
    }
  }
  
  // 4. –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ –ø–æ–ª—É—á–∞—é—Ç –±–∞–∑–æ–≤—ã–µ –±–∞–ª–ª—ã
  const universalModules = [224, 225, 13, 15, 42, 8]; // –ü–ª–∞—Ç–µ–∂–∏, —Ç—Ä–µ–∫–∏–Ω–≥, –ª–æ—è–ª—å–Ω–æ—Å—Ç—å, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  if (universalModules.includes(module.number)) {
    score += 50;
  }
  
  // 5. –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞ (–ò–Ω–¥–æ–Ω–µ–∑–∏—è/–ë–∞–ª–∏)
  if (userText.includes('–±–∞–ª–∏') || userText.includes('–∏–Ω–¥–æ–Ω–µ–∑–∏')) {
    if (module.number === 197) score += 200; // GoPay/OVO
    if (module.number === 198) score += 150; // Dana
    if (module.number === 199) score += 150; // LinkAja
  }
  
  // 6. –ê–Ω–∞–ª–∏–∑ –ø–æ —Ç–∏–ø—É –±–∏–∑–Ω–µ—Å–∞ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  if (userText.includes('–¥–æ—Å—Ç–∞–≤–∫')) {
    if (module.number === 237 || module.number === 225) score += 100; // –î–æ—Å—Ç–∞–≤–∫–∞ –∏ —Ç—Ä–µ–∫–∏–Ω–≥
  }
  if (userText.includes('–æ–Ω–ª–∞–π–Ω') || userText.includes('–∏–Ω—Ç–µ—Ä–Ω–µ—Ç')) {
    if (module.category === 'E-COMMERCE') score += 50;
  }
  if (userText.includes('–∫–ª–∏–µ–Ω—Ç') || userText.includes('crm')) {
    if (module.category === 'CRM') score += 60;
  }
  
  // 7. –®—Ç—Ä–∞—Ñ –∑–∞ –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∏–≥—Ä–æ–≤—ã–µ –º–æ–¥—É–ª–∏ –¥–ª—è —Å–µ—Ä—å–µ–∑–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞
  if (module.category === '–ò–ì–†–´' && !userText.includes('–∏–≥—Ä') && !userText.includes('—Ä–∞–∑–≤–ª–µ—á')) {
    score -= 100;
  }
  
  return Math.max(0, score); // –ù–µ –¥–æ–ø—É—Å–∫–∞–µ–º –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –±–∞–ª–ª—ã
}

export async function analyzeBusinessContext(messages: { role: 'user' | 'assistant'; content: string }[]): Promise<BusinessAnalysis> {
  const userMessages = messages.filter(m => m.role === 'user').map(m => m.content).join(' ');
  return analyzeBusinessFromText(userMessages);
}

export async function generateAIResponse(messages: { role: 'user' | 'assistant'; content: string }[], alreadyShownModules: number[] = []): Promise<{ response: string; recommendedModules: number[] }> {
  try {
    const { storage } = await import('./storage');
    const allModules = await storage.getAllModules();
    
    const lastUserMessage = messages.filter(m => m.role === 'user').pop()?.content || '';
    const analysis = analyzeBusinessFromText(lastUserMessage);
    
    console.log(`üéØ –ê–Ω–∞–ª–∏–∑ –±–∏–∑–Ω–µ—Å–∞: ${analysis.persona} (${analysis.industry})`);
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –º–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏
    const availableModules = allModules.filter(m => !alreadyShownModules.includes(m.number));
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ –º–æ–¥—É–ª—è
    const scoredModules = availableModules.map(module => ({
      ...module,
      relevanceScore: calculateModuleRelevance(module, analysis, lastUserMessage)
    }));
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –∏ –±–µ—Ä–µ–º —Ç–æ–ø-4
    const recommendedModules = scoredModules
      .sort((a, b) => b.relevanceScore - a.relevanceScore)
      .slice(0, 4)
      .map(m => m.number);
    
    console.log(`üèÜ –¢–æ–ø-4 –º–æ–¥—É–ª—è –¥–ª—è ${analysis.persona}:`, recommendedModules);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç —Å –º–æ–¥—É–ª—è–º–∏ –±–µ–∑ –æ–ø–∏—Å–∞–Ω–∏–π (–æ–Ω–∏ –±—É–¥—É—Ç –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö)
    const moduleReferences = recommendedModules.map(num => `[MODULE:${num}]`).join(' ');
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –±–∏–∑–Ω–µ—Å–∞ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    let businessTypeEmoji = '';
    if (lastUserMessage.toLowerCase().includes('—Ä–µ—Å—Ç–æ—Ä–∞–Ω') || lastUserMessage.toLowerCase().includes('—Å—É—à–∏') || 
        lastUserMessage.toLowerCase().includes('–ø–∏—Ü—Ü') || lastUserMessage.toLowerCase().includes('–µ–¥–∞')) {
      businessTypeEmoji = 'üçï';
    } else if (lastUserMessage.toLowerCase().includes('—Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ') || lastUserMessage.toLowerCase().includes('—Ç—É—Ä–∏–∑–º')) {
      businessTypeEmoji = 'üå¥';
    } else if (lastUserMessage.toLowerCase().includes('—Å–∞–ª–æ–Ω') || lastUserMessage.toLowerCase().includes('–∫—Ä–∞—Å–æ—Ç')) {
      businessTypeEmoji = 'üíÑ';
    } else if (lastUserMessage.toLowerCase().includes('–º–µ–¥–∏—Ü–∏–Ω') || lastUserMessage.toLowerCase().includes('–∫–ª–∏–Ω–∏–∫')) {
      businessTypeEmoji = 'üè•';
    } else {
      businessTypeEmoji = 'üöÄ';
    }
    
    const cleanResponse = `${businessTypeEmoji} –î–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –º–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –∏ —É–ª—É—á—à–∏—Ç—å —Å–µ—Ä–≤–∏—Å:\n\n${moduleReferences}`;
    
    return {
      response: cleanResponse,
      recommendedModules
    };
    
  } catch (error) {
    console.error('üö® –û—à–∏–±–∫–∞ AI:', error);
    
    // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π fallback - –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–µ –º–æ–¥—É–ª–∏
    const basicModules = [224, 225, 15, 13]; // –ü–ª–∞—Ç–µ–∂–∏, —Ç—Ä–µ–∫–∏–Ω–≥, –ª–æ—è–ª—å–Ω–æ—Å—Ç—å
    
    const moduleReferences = basicModules
      .filter(num => !alreadyShownModules.includes(num))
      .map(num => `[MODULE:${num}]`)
      .join(' ');
    
    return {
      response: `üöÄ –†–µ–∫–æ–º–µ–Ω–¥—É—é —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞:\n\n${moduleReferences}`,
      recommendedModules: basicModules.filter(num => !alreadyShownModules.includes(num))
    };
  }
}