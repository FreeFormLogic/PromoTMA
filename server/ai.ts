const GEMINI_API_KEY = process.env.GOOGLE_API_KEY;

if (!GEMINI_API_KEY) {
  console.error('GOOGLE_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
}

interface BusinessAnalysis {
  industry: string;
  size: string;
  challenges: string[];
  goals: string[];
  relevantCategories: string[];
  keywords: string[];
  persona: string;
}

// –ü—Ä–æ—Å—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –±–∏–∑–Ω–µ—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
function analyzeBusinessFromText(text: string): BusinessAnalysis {
  const lowerText = text.toLowerCase();
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω–¥—É—Å—Ç—Ä–∏—é –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
  let industry = 'general';
  let persona = 'general business';
  let relevantCategories: string[] = [];
  
  if (lowerText.includes('—Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ') || lowerText.includes('—Ç—É—Ä–∏–∑–º') || lowerText.includes('—Ç—É—Ä')) {
    industry = 'tourism';
    persona = '—Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ';
    relevantCategories = ['E-COMMERCE', 'CRM', '–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–ï–†–í–ò–°–´'];
  } else if (lowerText.includes('–ø–∏—Ü—Ü') || lowerText.includes('—Ä–µ—Å—Ç–æ—Ä–∞–Ω') || lowerText.includes('–∫–∞—Ñ–µ')) {
    industry = 'restaurant';
    persona = '—Ä–µ—Å—Ç–æ—Ä–∞–Ω/–ø–∏—Ü—Ü–µ—Ä–∏—è';
    relevantCategories = ['–û–¢–†–ê–°–õ–ï–í–´–ï –†–ï–®–ï–ù–ò–Ø', 'E-COMMERCE'];
  } else if (lowerText.includes('—Å–∞–ª–æ–Ω') || lowerText.includes('–∫—Ä–∞—Å–æ—Ç–∞') || lowerText.includes('–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä')) {
    industry = 'beauty';
    persona = '—Å–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã';
    relevantCategories = ['–û–¢–†–ê–°–õ–ï–í–´–ï –†–ï–®–ï–ù–ò–Ø', 'CRM'];
  } else if (lowerText.includes('–º–µ–¥–∏—Ü–∏–Ω') || lowerText.includes('–∫–ª–∏–Ω–∏–∫') || lowerText.includes('–≤—Ä–∞—á')) {
    industry = 'medical';
    persona = '–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∫–ª–∏–Ω–∏–∫–∞';
    relevantCategories = ['–û–¢–†–ê–°–õ–ï–í–´–ï –†–ï–®–ï–ù–ò–Ø', 'CRM'];
  }
  
  return {
    industry,
    size: 'medium',
    challenges: [],
    goals: [],
    relevantCategories,
    keywords: text.split(' '),
    persona
  };
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–¥—Å—á–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞
function calculateModuleRelevance(module: any, analysis: BusinessAnalysis): number {
  let score = 0;
  const userText = analysis.persona.toLowerCase();
  
  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–∏ –º–æ–¥—É–ª—è
  const moduleText = `${module.name} ${module.description} ${module.benefits}`.toLowerCase();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userKeywords = userText.split(' ').filter(word => word.length > 3);
  userKeywords.forEach(keyword => {
    if (moduleText.includes(keyword)) {
      score += 50; // –ë–∞–∑–æ–≤–∞—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
    }
  });
  
  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç—Ä–∞—Å–ª–µ–≤—É—é –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
  if (module.category === '–û–¢–†–ê–°–õ–ï–í–´–ï –†–ï–®–ï–ù–ò–Ø') {
    // –û—Ç—Ä–∞—Å–ª–µ–≤—ã–µ –º–æ–¥—É–ª–∏ –ø–æ–ª—É—á–∞—é—Ç –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –µ—Å–ª–∏ –æ–Ω–∏ –ø–æ–¥—Ö–æ–¥—è—Ç
    if (userText.includes('—Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ') || userText.includes('—Ç—É—Ä–∏–∑–º') || userText.includes('—Ç—É—Ä')) {
      if (module.number === 261) score += 300; // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ–º
    }
    if (userText.includes('—Ä–µ—Å—Ç–æ—Ä–∞–Ω') || userText.includes('–ø–∏—Ü—Ü') || userText.includes('–∫–∞—Ñ–µ') || userText.includes('–µ–¥–∞')) {
      if ([236, 237, 238].includes(module.number)) score += 200;
    }
    if (userText.includes('—Å–∞–ª–æ–Ω') || userText.includes('–∫—Ä–∞—Å–æ—Ç') || userText.includes('–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä')) {
      if (module.number === 240) score += 200;
    }
    if (userText.includes('–∫–ª–∏–Ω–∏–∫') || userText.includes('–º–µ–¥–∏—Ü–∏–Ω') || userText.includes('–≤—Ä–∞—á')) {
      if (module.number === 239) score += 200;
    }
  }
  
  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ –¥–ª—è –ª—é–±–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞
  if (module.category === 'E-COMMERCE') {
    score += 40; // E-commerce –º–æ–¥—É–ª–∏ –ø–æ–ª–µ–∑–Ω—ã –±–æ–ª—å—à–∏–Ω—Å—Ç–≤—É –±–∏–∑–Ω–µ—Å–æ–≤
    
    // –ü–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∫—Ä–∏—Ç–∏—á–Ω—ã –¥–ª—è –ª—é–±–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞
    if (module.number === 224) score += 60;
    
    // –î–ª—è –ë–∞–ª–∏ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏
    if (userText.includes('–±–∞–ª–∏') || userText.includes('–∏–Ω–¥–æ–Ω–µ–∑–∏')) {
      if (module.number === 197) score += 100; // GoPay/OVO
    }
  }
  
  // CRM –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –ø–æ–ª–µ–∑–Ω—ã –≤—Å–µ–º
  if (module.category === 'MARKETING' || module.category === 'CRM') {
    score += 35;
  }
  
  // –ü—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã
  if (module.name.toLowerCase().includes('–ª–æ—è–ª—å–Ω–æ—Å—Ç') || module.name.toLowerCase().includes('–±–æ–Ω—É—Å')) {
    score += 45;
  }
  
  // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–æ–ª–µ–∑–Ω—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
  if (module.category === 'INTEGRATIONS' || module.name.toLowerCase().includes('–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏')) {
    score += 30;
  }
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∞–ª–ª—ã –∑–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  if (analysis.relevantCategories.includes(module.category)) {
    score += 25;
  }
  
  return score;
}

export async function analyzeBusinessContext(messages: { role: 'user' | 'assistant'; content: string }[]): Promise<BusinessAnalysis> {
  const userMessages = messages.filter(m => m.role === 'user').map(m => m.content).join(' ');
  return analyzeBusinessFromText(userMessages);
}

export async function generateAIResponse(messages: { role: 'user' | 'assistant'; content: string }[], alreadyShownModules: number[] = []): Promise<{ response: string; recommendedModules: number[] }> {
  try {
    const { storage } = await import('./storage');
    const allModules = await storage.getAllModules();
    
    const lastUserMessage = messages.filter(m => m.role === 'user').pop()?.content || '';
    const analysis = analyzeBusinessFromText(lastUserMessage);
    
    console.log(`üéØ –ê–Ω–∞–ª–∏–∑ –±–∏–∑–Ω–µ—Å–∞: ${analysis.persona} (${analysis.industry})`);
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –º–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏
    const availableModules = allModules.filter(m => !alreadyShownModules.includes(m.number));
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ –º–æ–¥—É–ª—è
    const scoredModules = availableModules.map(module => ({
      ...module,
      relevanceScore: calculateModuleRelevance(module, analysis)
    }));
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –∏ –±–µ—Ä–µ–º —Ç–æ–ø-4
    const recommendedModules = scoredModules
      .sort((a, b) => b.relevanceScore - a.relevanceScore)
      .slice(0, 4)
      .map(m => m.number);
    
    console.log(`üèÜ –¢–æ–ø-4 –º–æ–¥—É–ª—è –¥–ª—è ${analysis.persona}:`, recommendedModules);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞
    const response = `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–¥–æ–±—Ä–∞–ª –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ –¥–ª—è ${analysis.persona}:`;
    
    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –º–æ–¥—É–ª–µ–π
    const moduleExplanations = recommendedModules.map(moduleNum => {
      const module = allModules.find(m => m.number === moduleNum);
      if (!module) return '';
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∏–∑–Ω–µ—Å-–∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
      const userText = analysis.persona.toLowerCase();
      let explanation = '';
      
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –∏–∑ benefits
      const mainBenefit = module.benefits.replace(/\*\*/g, '').split(',')[0];
      
      // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–æ–¥ –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (module.category === '–û–¢–†–ê–°–õ–ï–í–´–ï –†–ï–®–ï–ù–ò–Ø') {
        // –î–ª—è –æ—Ç—Ä–∞—Å–ª–µ–≤—ã—Ö –º–æ–¥—É–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        explanation = module.description;
      } else if (module.category === 'E-COMMERCE') {
        // –î–ª—è e-commerce –º–æ–¥—É–ª–µ–π —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø—Ä–æ–¥–∞–∂–∞—Ö
        explanation = `${module.description}. ${mainBenefit}`;
      } else if (module.category === 'MARKETING' || module.category === 'CRM') {
        // –î–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ –∏ CRM —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞—Ö
        explanation = `${module.description} –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏`;
      } else {
        // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
        explanation = `${module.description}. ${mainBenefit}`;
      }
      
      return `[MODULE:${moduleNum}] ${explanation}`;
    });
    
    const detailedResponse = `${response}\n\n${moduleExplanations.join('\n\n')}`;
    
    return {
      response: detailedResponse,
      recommendedModules
    };
    
  } catch (error) {
    console.error('üö® –û—à–∏–±–∫–∞ AI:', error);
    
    // –ü—Ä–æ—Å—Ç–æ–π fallback –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    const lastUserMessage = messages.filter(m => m.role === 'user').pop()?.content?.toLowerCase() || '';
    
    let fallbackModules: number[] = [];
    let fallbackResponse = '';
    
    if (lastUserMessage.includes('—Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ') || lastUserMessage.includes('—Ç—É—Ä–∏–∑–º')) {
      fallbackModules = [261, 13, 8, 42]; // –û—Ç—Ä–∞—Å–ª–µ–≤–æ–π –º–æ–¥—É–ª—å —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ
      fallbackResponse = 'üå¥ –î–ª—è —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏:';
    } else if (lastUserMessage.includes('–ø–∏—Ü—Ü') || lastUserMessage.includes('—Ä–µ—Å—Ç–æ—Ä–∞–Ω')) {
      fallbackModules = [236, 237, 238, 225];
      fallbackResponse = 'üçï –î–ª—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞/–ø–∏—Ü—Ü–µ—Ä–∏–∏:';
    } else if (lastUserMessage.includes('—Å–∞–ª–æ–Ω') || lastUserMessage.includes('–∫—Ä–∞—Å–æ—Ç–∞')) {
      fallbackModules = [240, 8, 224, 15];
      fallbackResponse = 'üíÑ –î–ª—è —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã:';
    } else if (lastUserMessage.includes('–º–µ–¥–∏—Ü–∏–Ω') || lastUserMessage.includes('–∫–ª–∏–Ω–∏–∫')) {
      fallbackModules = [239, 8, 224, 15];
      fallbackResponse = 'üè• –î–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∫–ª–∏–Ω–∏–∫–∏:';
    } else {
      fallbackModules = [1, 224, 15, 13];
      fallbackResponse = '–î–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:';
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –¥–ª—è fallback –º–æ–¥—É–ª–µ–π
    const filteredModules = fallbackModules.filter(num => !alreadyShownModules.includes(num));
    const fallbackExplanations = filteredModules.map(moduleNum => {
      if (lastUserMessage.includes('—Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ')) {
        if (moduleNum === 261) return `[MODULE:261] –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ–º —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π —Ç—É—Ä–æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤.`;
        if (moduleNum === 13) return `[MODULE:13] –ü–æ–∑–≤–æ–ª–∏—Ç –≤–Ω–µ–¥—Ä–∏—Ç—å –±–æ–Ω—É—Å–Ω—ã–µ –∫–∞—Ä—Ç—ã –∏ –∫—ç—à–±—ç–∫ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞.`;
        if (moduleNum === 8) return `[MODULE:8] –û–±–µ—Å–ø–µ—á–∏—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—É—Ä–æ–≤.`;
        if (moduleNum === 42) return `[MODULE:42] –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≥–æ—Ä—è—â–∏—Ö —Ç—É—Ä–∞—Ö –∏ –∞–∫—Ü–∏—è—Ö.`;
        if (moduleNum === 197) return `[MODULE:197] –ü—Ä–∏–µ–º –ø–ª–∞—Ç–µ–∂–µ–π —á–µ—Ä–µ–∑ GoPay –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –ë–∞–ª–∏.`;
      } else if (lastUserMessage.includes('—Ä–µ—Å—Ç–æ—Ä–∞–Ω') || lastUserMessage.includes('–ø–∏—Ü—Ü')) {
        if (moduleNum === 236) return `[MODULE:236] –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –∫—É—Ö–Ω—é.`;
        if (moduleNum === 237) return `[MODULE:237] –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å GPS-—Ç—Ä–µ–∫–∏–Ω–≥–æ–º –∫—É—Ä—å–µ—Ä–æ–≤.`;
        if (moduleNum === 238) return `[MODULE:238] –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –ø–∏—Ü—Ü–µ—Ä–∏–π —Å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º.`;
        if (moduleNum === 225) return `[MODULE:225] –°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤ —Å —Ç—Ä–µ–∫–∏–Ω–≥–æ–º.`;
        if (moduleNum === 224) return `[MODULE:224] –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–µ–º –ø–ª–∞—Ç–µ–∂–µ–π.`;
      }
      return `[MODULE:${moduleNum}] –ü–æ–ª–µ–∑–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.`;
    });
    
    const detailedFallbackResponse = `${fallbackResponse}\n\n${fallbackExplanations.join('\n\n')}`;
    
    return {
      response: detailedFallbackResponse,
      recommendedModules: filteredModules
    };
  }
}