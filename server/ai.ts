const GEMINI_API_KEY = process.env.GOOGLE_API_KEY;

if (!GEMINI_API_KEY) {
  console.error('GOOGLE_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
}

interface BusinessAnalysis {
  industry: string;
  size: string;
  challenges: string[];
  goals: string[];
  relevantCategories: string[];
  keywords: string[];
  persona: string;
}

// –ü—Ä–æ—Å—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –±–∏–∑–Ω–µ—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
function analyzeBusinessFromText(text: string): BusinessAnalysis {
  const lowerText = text.toLowerCase();
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω–¥—É—Å—Ç—Ä–∏—é –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
  let industry = 'general';
  let persona = 'general business';
  let relevantCategories: string[] = [];
  
  if (lowerText.includes('—Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ') || lowerText.includes('—Ç—É—Ä–∏–∑–º') || lowerText.includes('—Ç—É—Ä')) {
    industry = 'tourism';
    persona = '—Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ';
    relevantCategories = ['E-COMMERCE', 'CRM', '–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–ï–†–í–ò–°–´'];
  } else if (lowerText.includes('–ø–∏—Ü—Ü') || lowerText.includes('—Ä–µ—Å—Ç–æ—Ä–∞–Ω') || lowerText.includes('–∫–∞—Ñ–µ')) {
    industry = 'restaurant';
    persona = '—Ä–µ—Å—Ç–æ—Ä–∞–Ω/–ø–∏—Ü—Ü–µ—Ä–∏—è';
    relevantCategories = ['–û–¢–†–ê–°–õ–ï–í–´–ï –†–ï–®–ï–ù–ò–Ø', 'E-COMMERCE'];
  } else if (lowerText.includes('—Å–∞–ª–æ–Ω') || lowerText.includes('–∫—Ä–∞—Å–æ—Ç–∞') || lowerText.includes('–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä')) {
    industry = 'beauty';
    persona = '—Å–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã';
    relevantCategories = ['–û–¢–†–ê–°–õ–ï–í–´–ï –†–ï–®–ï–ù–ò–Ø', 'CRM'];
  } else if (lowerText.includes('–º–µ–¥–∏—Ü–∏–Ω') || lowerText.includes('–∫–ª–∏–Ω–∏–∫') || lowerText.includes('–≤—Ä–∞—á')) {
    industry = 'medical';
    persona = '–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∫–ª–∏–Ω–∏–∫–∞';
    relevantCategories = ['–û–¢–†–ê–°–õ–ï–í–´–ï –†–ï–®–ï–ù–ò–Ø', 'CRM'];
  }
  
  return {
    industry,
    size: 'medium',
    challenges: [],
    goals: [],
    relevantCategories,
    keywords: text.split(' '),
    persona
  };
}

// –ü–æ–¥—Å—á–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞
function calculateModuleRelevance(module: any, analysis: BusinessAnalysis): number {
  let score = 0;
  
  // –û—Ç—Ä–∞—Å–ª–µ–≤—ã–µ –º–æ–¥—É–ª–∏ –ø–æ–ª—É—á–∞—é—Ç –≤—ã—Å–æ–∫–∏–µ –±–∞–ª–ª—ã –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –æ—Ç—Ä–∞—Å–ª–µ–π
  if (analysis.industry === 'tourism') {
    // –î–ª—è —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤ - —Ç–æ—á–Ω–∞—è –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è
    if (module.number === 13) score += 120; // –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
    if (module.number === 8) score += 110;  // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM
    if (module.number === 42) score += 105; // Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if (module.number === 197) score += 100; // GoPay –∏ OVO
    if ([224, 15, 25].includes(module.number)) score += 70;
  } else if (analysis.industry === 'restaurant') {
    // –î–ª—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤/–ø–∏—Ü—Ü–µ—Ä–∏–π - –æ—Ç—Ä–∞—Å–ª–µ–≤—ã–µ –º–æ–¥—É–ª–∏
    if ([236, 237, 238].includes(module.number)) score += 110;
    if ([225, 8, 224].includes(module.number)) score += 80;
  } else if (analysis.industry === 'beauty') {
    // –î–ª—è —Å–∞–ª–æ–Ω–æ–≤ –∫—Ä–∞—Å–æ—Ç—ã
    if (module.number === 240) score += 110;
    if ([8, 224, 15].includes(module.number)) score += 80;
  } else if (analysis.industry === 'medical') {
    // –î–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∫–ª–∏–Ω–∏–∫
    if (module.number === 239) score += 110;
    if ([8, 224, 15].includes(module.number)) score += 80;
  }
  
  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ –ø–æ–ª–µ–∑–Ω—ã–µ –º–æ–¥—É–ª–∏
  if ([1, 224, 13, 8].includes(module.number)) score += 50;
  
  // –ú–æ–¥—É–ª–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  if (analysis.relevantCategories.includes(module.category)) {
    score += 30;
  }
  
  return score;
}

export async function analyzeBusinessContext(messages: { role: 'user' | 'assistant'; content: string }[]): Promise<BusinessAnalysis> {
  const userMessages = messages.filter(m => m.role === 'user').map(m => m.content).join(' ');
  return analyzeBusinessFromText(userMessages);
}

export async function generateAIResponse(messages: { role: 'user' | 'assistant'; content: string }[], alreadyShownModules: number[] = []): Promise<{ response: string; recommendedModules: number[] }> {
  try {
    const { storage } = await import('./storage');
    const allModules = await storage.getAllModules();
    
    const lastUserMessage = messages.filter(m => m.role === 'user').pop()?.content || '';
    const analysis = analyzeBusinessFromText(lastUserMessage);
    
    console.log(`üéØ –ê–Ω–∞–ª–∏–∑ –±–∏–∑–Ω–µ—Å–∞: ${analysis.persona} (${analysis.industry})`);
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –º–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏
    const availableModules = allModules.filter(m => !alreadyShownModules.includes(m.number));
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ –º–æ–¥—É–ª—è
    const scoredModules = availableModules.map(module => ({
      ...module,
      relevanceScore: calculateModuleRelevance(module, analysis)
    }));
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –∏ –±–µ—Ä–µ–º —Ç–æ–ø-4
    const recommendedModules = scoredModules
      .sort((a, b) => b.relevanceScore - a.relevanceScore)
      .slice(0, 4)
      .map(m => m.number);
    
    console.log(`üèÜ –¢–æ–ø-4 –º–æ–¥—É–ª—è –¥–ª—è ${analysis.persona}:`, recommendedModules);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
    let response = '';
    switch (analysis.industry) {
      case 'tourism':
        response = 'üå¥ –î–ª—è —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –º–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –∏ —É–ª—É—á—à–∏—Ç—å —Å–µ—Ä–≤–∏—Å:';
        break;
      case 'restaurant':
        response = 'üçï –î–ª—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞/–ø–∏—Ü—Ü–µ—Ä–∏–∏ –ø–æ–¥–æ–±—Ä–∞–ª —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:';
        break;
      case 'beauty':
        response = 'üíÑ –î–ª—è —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –º–æ–¥—É–ª–∏ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏:';
        break;
      case 'medical':
        response = 'üè• –î–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∫–ª–∏–Ω–∏–∫–∏ –≤—ã–±—Ä–∞–ª –º–æ–¥—É–ª–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞–º–∏:';
        break;
      default:
        response = '–ü–æ–¥–æ–±—Ä–∞–ª –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –º–æ–¥—É–ª–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞:';
    }
    
    // –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏—è–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–æ–¥—É–ª—è
    const moduleExplanations = recommendedModules.map(moduleNum => {
      const module = allModules.find(m => m.number === moduleNum);
      if (!module) return '';
      
      switch (analysis.industry) {
        case 'tourism':
          if (moduleNum === 13) return `[MODULE:13] –ü–æ–∑–≤–æ–ª–∏—Ç –≤–Ω–µ–¥—Ä–∏—Ç—å –±–æ–Ω—É—Å–Ω—ã–µ –∫–∞—Ä—Ç—ã, –Ω–∞—á–∏—Å–ª—è—Ç—å –∫—ç—à–±—ç–∫ –∏ –±–∞–ª–ª—ã –∑–∞ –ø–æ–∫—É–ø–∫—É —Ç—É—Ä–æ–≤.`;
          if (moduleNum === 8) return `[MODULE:8] –û–±–µ—Å–ø–µ—á–∏—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤, —Ç–∞–∫–∏—Ö –∫–∞–∫ –¢—É—Ä–≤–∏–∑–æ—Ä, –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—É—Ä–æ–≤ –ø—Ä—è–º–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.`;
          if (moduleNum === 42) return `[MODULE:42] –î–∞—Å—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∏–µ–Ω—Ç–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≥–æ—Ä—è—á–∏—Ö —Ç—É—Ä–∞—Ö, –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∞–∫—Ü–∏—è—Ö.`;
          if (moduleNum === 197) return `[MODULE:197] –ü–æ–∑–≤–æ–ª–∏—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–ø–ª–∞—Ç—É –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –ë–∞–ª–∏ —á–µ—Ä–µ–∑ –ø–æ–ø—É–ª—è—Ä–Ω—É—é –º–µ—Å—Ç–Ω—É—é —Å–∏—Å—Ç–µ–º—É GoPay.`;
          break;
        case 'restaurant':
          if (moduleNum === 236) return `[MODULE:236] –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∫–ª–∏–Ω–∏–∫–æ–π —Å –∑–∞–ø–∏—Å—å—é –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤.`;
          if (moduleNum === 237) return `[MODULE:237] –û—Ç—Ä–∞—Å–ª–µ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ñ–∏—Ç–Ω–µ—Å-–∫–ª—É–±–∞ —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞–º–∏ –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏.`;
          if (moduleNum === 238) return `[MODULE:238] –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã —Å –æ–Ω–ª–∞–π–Ω-–∑–∞–ø–∏—Å—å—é –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —É—Å–ª—É–≥–∞–º–∏.`;
          break;
        case 'beauty':
          if (moduleNum === 240) return `[MODULE:240] –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ—Ç—Ä–∞—Å–ª–µ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã —Å –∑–∞–ø–∏—Å—å—é –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —É—Å–ª—É–≥–∞–º–∏.`;
          if (moduleNum === 8) return `[MODULE:8] –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ CRM-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏ –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –±–∞–∑—ã.`;
          if (moduleNum === 224) return `[MODULE:224] –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–µ–º –ø–ª–∞—Ç–µ–∂–µ–π —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º.`;
          break;
        case 'medical':
          if (moduleNum === 239) return `[MODULE:239] –û—Ç—Ä–∞—Å–ª–µ–≤–æ–π –º–æ–¥—É–ª—å –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∫–ª–∏–Ω–∏–∫ —Å –∑–∞–ø–∏—Å—å—é –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ø—Ä–∏–µ–º–∞–º–∏.`;
          if (moduleNum === 8) return `[MODULE:8] –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏.`;
          if (moduleNum === 224) return `[MODULE:224] –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π –∑–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —É—Å–ª—É–≥–∏.`;
          break;
      }
      
      // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
      if (moduleNum === 1) return `[MODULE:1] –°–æ–∑–¥–∞—Å—Ç –∫—Ä–∞—Å–∏–≤—É—é –≤–∏—Ç—Ä–∏–Ω—É —Å AI-–æ–ø–∏—Å–∞–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏.`;
      if (moduleNum === 224) return `[MODULE:224] –£–ø—Ä–æ—Å—Ç–∏—Ç –ø—Ä–∏–µ–º –ø–ª–∞—Ç–µ–∂–µ–π —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.`;
      if (moduleNum === 15) return `[MODULE:15] –î–∞—Å—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä—ã —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º–∏ –ø–ª–∞—Ç–µ–∂–∞–º–∏.`;
      if (moduleNum === 13) return `[MODULE:13] –ü–æ–º–æ–∂–µ—Ç —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –±–æ–Ω—É—Å–æ–≤ –∏ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π.`;
      
      return `[MODULE:${moduleNum}] ${module.benefits.replace(/\*\*/g, '').split('.')[0]}.`;
    });
    
    const detailedResponse = `${response}\n\n${moduleExplanations.join('\n\n')}`;
    
    return {
      response: detailedResponse,
      recommendedModules
    };
    
  } catch (error) {
    console.error('üö® –û—à–∏–±–∫–∞ AI:', error);
    
    // –ü—Ä–æ—Å—Ç–æ–π fallback –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    const lastUserMessage = messages.filter(m => m.role === 'user').pop()?.content?.toLowerCase() || '';
    
    let fallbackModules: number[] = [];
    let fallbackResponse = '';
    
    if (lastUserMessage.includes('—Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ') || lastUserMessage.includes('—Ç—É—Ä–∏–∑–º')) {
      fallbackModules = [13, 8, 42, 197];
      fallbackResponse = 'üå¥ –î–ª—è —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —ç—Ç–∏ –º–æ–¥—É–ª–∏:';
    } else if (lastUserMessage.includes('–ø–∏—Ü—Ü') || lastUserMessage.includes('—Ä–µ—Å—Ç–æ—Ä–∞–Ω')) {
      fallbackModules = [236, 237, 238, 225];
      fallbackResponse = 'üçï –î–ª—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞/–ø–∏—Ü—Ü–µ—Ä–∏–∏:';
    } else if (lastUserMessage.includes('—Å–∞–ª–æ–Ω') || lastUserMessage.includes('–∫—Ä–∞—Å–æ—Ç–∞')) {
      fallbackModules = [240, 8, 224, 15];
      fallbackResponse = 'üíÑ –î–ª—è —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã:';
    } else if (lastUserMessage.includes('–º–µ–¥–∏—Ü–∏–Ω') || lastUserMessage.includes('–∫–ª–∏–Ω–∏–∫')) {
      fallbackModules = [239, 8, 224, 15];
      fallbackResponse = 'üè• –î–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∫–ª–∏–Ω–∏–∫–∏:';
    } else {
      fallbackModules = [1, 224, 15, 13];
      fallbackResponse = '–î–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:';
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –¥–ª—è fallback –º–æ–¥—É–ª–µ–π
    const filteredModules = fallbackModules.filter(num => !alreadyShownModules.includes(num));
    const fallbackExplanations = filteredModules.map(moduleNum => {
      if (lastUserMessage.includes('—Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ')) {
        if (moduleNum === 13) return `[MODULE:13] –ü–æ–∑–≤–æ–ª–∏—Ç –≤–Ω–µ–¥—Ä–∏—Ç—å –±–æ–Ω—É—Å–Ω—ã–µ –∫–∞—Ä—Ç—ã –∏ –∫—ç—à–±—ç–∫ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞.`;
        if (moduleNum === 8) return `[MODULE:8] –û–±–µ—Å–ø–µ—á–∏—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—É—Ä–æ–≤.`;
        if (moduleNum === 42) return `[MODULE:42] –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≥–æ—Ä—è—â–∏—Ö —Ç—É—Ä–∞—Ö –∏ –∞–∫—Ü–∏—è—Ö.`;
        if (moduleNum === 197) return `[MODULE:197] –ü—Ä–∏–µ–º –ø–ª–∞—Ç–µ–∂–µ–π —á–µ—Ä–µ–∑ GoPay –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –ë–∞–ª–∏.`;
      } else if (lastUserMessage.includes('—Ä–µ—Å—Ç–æ—Ä–∞–Ω') || lastUserMessage.includes('–ø–∏—Ü—Ü')) {
        if (moduleNum === 236) return `[MODULE:236] –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∫–ª–∏–Ω–∏–∫–æ–π.`;
        if (moduleNum === 237) return `[MODULE:237] –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏—Ç–Ω–µ—Å-–∫–ª—É–±–æ–º.`;
        if (moduleNum === 238) return `[MODULE:238] –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∞–ª–æ–Ω–æ–º –∫—Ä–∞—Å–æ—Ç—ã.`;
        if (moduleNum === 225) return `[MODULE:225] –°–∏—Å—Ç–µ–º–∞ –æ–Ω–ª–∞–π–Ω-–∑–∞–∫–∞–∑–æ–≤ –µ–¥—ã.`;
      }
      return `[MODULE:${moduleNum}] –ü–æ–ª–µ–∑–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.`;
    });
    
    const detailedFallbackResponse = `${fallbackResponse}\n\n${fallbackExplanations.join('\n\n')}`;
    
    return {
      response: detailedFallbackResponse,
      recommendedModules: filteredModules
    };
  }
}