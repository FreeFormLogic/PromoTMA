import { useState, useRef, useEffect } from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { 
  Calculator,
  TrendingUp,
  Users,
  DollarSign,
  Clock,
  Smartphone,
  CheckCircle,
  Star,
  Zap,
  Shield,
  Globe,
  MessageCircle,
  ArrowRight,
  Download,
  Share,
  Heart,
  BarChart3,
  Target,
  Rocket,
  CreditCard
} from 'lucide-react';

interface AdvantageCategory {
  id: string;
  name: string;
  icon: React.ReactNode;
  count: number;
  advantages: Advantage[];
}

interface Advantage {
  id: string;
  title: string;
  description: string;
  impact: string;
  roi?: string;
  category: string;
  isPopular?: boolean;
}

export default function Development() {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [favorites, setFavorites] = useState<string[]>([]);
  const [monthlyRevenue, setMonthlyRevenue] = useState(100000);
  const [currentCAC, setCurrentCAC] = useState(500);
  const [searchTerm, setSearchTerm] = useState('');

  // –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const advantages: Advantage[] = [
    // –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
    {
      id: '1',
      title: '0% –∫–æ–º–∏—Å—Å–∏—è —á–µ—Ä–µ–∑ Telegram Stars',
      description: '–ü–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ Telegram',
      impact: '–≠–∫–æ–Ω–æ–º–∏—è –¥–æ 2.16 –º–ª–Ω ‚ÇΩ/–≥–æ–¥',
      roi: '300-500%',
      category: 'financial',
      isPopular: true
    },
    {
      id: '2',
      title: '–°–Ω–∏–∂–µ–Ω–∏–µ CAC –Ω–∞ 70%',
      description: '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –ø–∞–¥–∞–µ—Ç —Å 500‚ÇΩ –¥–æ 150‚ÇΩ',
      impact: '–≠–∫–æ–Ω–æ–º–∏—è 350‚ÇΩ —Å –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞',
      category: 'financial',
      isPopular: true
    },
    {
      id: '3',
      title: '–†–æ—Å—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ —á–µ–∫–∞ –≤ 3-5 —Ä–∞–∑',
      description: '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏ —É–¥–æ–±—Å—Ç–≤–æ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç –ø–æ–∫—É–ø–∫–∏',
      impact: '–î–æ 5x —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª–∏',
      category: 'financial'
    },
    
    // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
    {
      id: '4',
      title: 'MVP –∑–∞ 2 –Ω–µ–¥–µ–ª–∏',
      description: '–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ —Å –≥–æ—Ç–æ–≤—ã–º–∏ –º–æ–¥—É–ª—è–º–∏',
      impact: '–ë—ã—Å—Ç—Ä–µ–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –≤ 10 —Ä–∞–∑',
      category: 'technical',
      isPopular: true
    },
    {
      id: '5',
      title: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
      description: '–í—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      impact: '–ù–µ—Ç –∑–∞—Ç—Ä–∞—Ç –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤–µ—Ä—Å–∏–π',
      category: 'technical'
    },
    {
      id: '6',
      title: '–ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ—Å—Ç—å',
      description: '–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –æ–¥–∏–Ω–∞–∫–æ–≤–æ',
      impact: '–≠–∫–æ–Ω–æ–º–∏—è –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –ø–æ–¥ iOS/Android',
      category: 'technical'
    },

    // –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
    {
      id: '7',
      title: '900+ –º–ª–Ω –≥–æ—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      description: '–û–≥—Ä–æ–º–Ω–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è —É–∂–µ –≤ Telegram',
      impact: '–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∞—É–¥–∏—Ç–æ—Ä–∏–∏',
      category: 'marketing',
      isPopular: true
    },
    {
      id: '8',
      title: '–í–∏—Ä—É—Å–Ω–æ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ',
      description: '–õ–µ–≥–∫–∏–π —à–µ—Ä–∏–Ω–≥ –≤ —á–∞—Ç—ã –∏ –∫–∞–Ω–∞–ª—ã',
      impact: '–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–π —Ä–æ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      category: 'marketing'
    },
    {
      id: '9',
      title: 'Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è 95% –¥–æ—Å—Ç–∞–≤–∫–∞',
      description: '–ü—Ä–æ—Ç–∏–≤ 60% —É –æ–±—ã—á–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π',
      impact: '–õ—É—á—à–µ–µ —É–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      category: 'marketing'
    },

    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç
    {
      id: '10',
      title: '–ë–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
      description: '–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –±–µ–∑ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è',
      impact: '–ö–æ–Ω–≤–µ—Ä—Å–∏—è –≤—ã—à–µ –≤ 3 —Ä–∞–∑–∞',
      category: 'ux',
      isPopular: true
    },
    {
      id: '11',
      title: '–û—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã',
      description: '–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞',
      impact: '–†–∞–±–æ—Ç–∞–µ—Ç –≤—Å–µ–≥–¥–∞ –∏ –≤–µ–∑–¥–µ',
      category: 'ux'
    },
    {
      id: '12',
      title: '–ù–∞—Ç–∏–≤–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è',
      description: '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Telegram',
      impact: '–ü—Ä–∏–≤—ã—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      category: 'ux'
    }
  ];

  const categories: AdvantageCategory[] = [
    {
      id: 'all',
      name: '–í—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞',
      icon: <Star className="w-5 h-5" />,
      count: advantages.length,
      advantages: advantages
    },
    {
      id: 'financial',
      name: '–§–∏–Ω–∞–Ω—Å—ã',
      icon: <DollarSign className="w-5 h-5" />,
      count: advantages.filter(a => a.category === 'financial').length,
      advantages: advantages.filter(a => a.category === 'financial')
    },
    {
      id: 'technical',
      name: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ',
      icon: <Zap className="w-5 h-5" />,
      count: advantages.filter(a => a.category === 'technical').length,
      advantages: advantages.filter(a => a.category === 'technical')
    },
    {
      id: 'marketing',
      name: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
      icon: <Target className="w-5 h-5" />,
      count: advantages.filter(a => a.category === 'marketing').length,
      advantages: advantages.filter(a => a.category === 'marketing')
    },
    {
      id: 'ux',
      name: 'UX/UI',
      icon: <Smartphone className="w-5 h-5" />,
      count: advantages.filter(a => a.category === 'ux').length,
      advantages: advantages.filter(a => a.category === 'ux')
    }
  ];

  const calculateSavings = () => {
    const telegramCAC = currentCAC * 0.3; // 70% —Å–Ω–∏–∂–µ–Ω–∏–µ
    const savingsPerCustomer = currentCAC - telegramCAC;
    const customersPerMonth = monthlyRevenue / 1000; // –ø—Ä–∏–º–µ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
    const monthlySavings = savingsPerCustomer * customersPerMonth;
    const yearlySavings = monthlySavings * 12;

    return {
      savingsPerCustomer: Math.round(savingsPerCustomer),
      monthlySavings: Math.round(monthlySavings),
      yearlySavings: Math.round(yearlySavings),
      newCAC: Math.round(telegramCAC),
      roi: Math.round((yearlySavings / 50000) * 100) // ROI –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –≤ 50k
    };
  };

  const savings = calculateSavings();

  const filteredAdvantages = selectedCategory === 'all' 
    ? advantages.filter(a => 
        a.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
        a.description.toLowerCase().includes(searchTerm.toLowerCase())
      )
    : categories.find(c => c.id === selectedCategory)?.advantages.filter(a => 
        a.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
        a.description.toLowerCase().includes(searchTerm.toLowerCase())
      ) || [];

  const toggleFavorite = (id: string) => {
    setFavorites(prev => 
      prev.includes(id) 
        ? prev.filter(f => f !== id)
        : [...prev, id]
    );
  };

  const generatePDF = () => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF
    console.log('Generating PDF with selected advantages');
  };

  const shareAdvantages = () => {
    if (navigator.share) {
      navigator.share({
        title: '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Telegram Mini Apps',
        text: '–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –ø–æ—á–µ–º—É Telegram Mini Apps - –ª—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞',
        url: window.location.href
      });
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50">
      {/* Hero Section */}
      <section className="relative py-20 bg-gradient-to-r from-blue-600 via-purple-600 to-blue-800 text-white overflow-hidden">
        <div className="absolute inset-0 bg-black/20"></div>
        <div className="relative max-w-7xl mx-auto px-4 text-center">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <Badge className="mb-6 bg-yellow-400 text-yellow-900 text-lg px-6 py-2">
              üöÄ 110+ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
            </Badge>
            <h1 className="text-4xl md:text-6xl font-bold mb-6">
              –ü–æ—á–µ–º—É Telegram Mini Apps - 
              <span className="block text-yellow-300">–ª—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞</span>
            </h1>
            <p className="text-xl md:text-2xl mb-8 text-blue-100 max-w-4xl mx-auto">
              –£–≤–µ–ª–∏—á—å—Ç–µ –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ 40% –∏ —Å—ç–∫–æ–Ω–æ–º—å—Ç–µ –¥–æ 2.16 –º–ª–Ω ‚ÇΩ/–≥–æ–¥ —Å –≥–æ—Ç–æ–≤—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏
            </p>

            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <div className="grid md:grid-cols-3 gap-6 mb-12 max-w-4xl mx-auto">
              <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6">
                <div className="text-3xl font-bold mb-2">900+ –º–ª–Ω</div>
                <div className="text-blue-200">–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ Telegram</div>
              </div>
              <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6">
                <div className="text-3xl font-bold mb-2">70%</div>
                <div className="text-blue-200">—ç–∫–æ–Ω–æ–º–∏—è –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</div>
              </div>
              <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6">
                <div className="text-3xl font-bold mb-2">1-5 –¥–Ω–µ–π</div>
                <div className="text-blue-200">–¥–æ –∑–∞–ø—É—Å–∫–∞ MVP</div>
              </div>
            </div>

            <Button 
              size="lg" 
              className="bg-yellow-400 text-yellow-900 hover:bg-yellow-300 text-lg px-8 py-4 shadow-xl"
              onClick={() => document.getElementById('calculator')?.scrollIntoView({ behavior: 'smooth' })}
            >
              <Calculator className="w-6 h-6 mr-3" />
              –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤–∞—à—É –≤—ã–≥–æ–¥—É
              <ArrowRight className="w-6 h-6 ml-3" />
            </Button>
          </motion.div>
        </div>
      </section>

      {/* –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —ç–∫–æ–Ω–æ–º–∏–∏ */}
      <section id="calculator" className="py-16 bg-white">
        <div className="max-w-6xl mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mb-12"
          >
            <h2 className="text-3xl md:text-4xl font-bold mb-4 text-gray-900">
              –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —ç–∫–æ–Ω–æ–º–∏–∏
            </h2>
            <p className="text-xl text-gray-600">
              –£–∑–Ω–∞–π—Ç–µ, —Å–∫–æ–ª—å–∫–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç–µ –Ω–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏–∏ Telegram Mini Apps
            </p>
          </motion.div>

          <div className="grid lg:grid-cols-2 gap-12">
            {/* –§–æ—Ä–º–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ */}
            <Card className="p-8">
              <CardHeader>
                <CardTitle className="flex items-center gap-3">
                  <Calculator className="w-6 h-6 text-blue-600" />
                  –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-6">
                <div>
                  <Label htmlFor="revenue">–ú–µ—Å—è—á–Ω–∞—è –≤—ã—Ä—É—á–∫–∞ (‚ÇΩ)</Label>
                  <Input
                    id="revenue"
                    type="number"
                    value={monthlyRevenue}
                    onChange={(e) => setMonthlyRevenue(Number(e.target.value))}
                    className="mt-2"
                  />
                </div>
                <div>
                  <Label htmlFor="cac">–¢–µ–∫—É—â–∏–π CAC (—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞, ‚ÇΩ)</Label>
                  <Input
                    id="cac"
                    type="number"
                    value={currentCAC}
                    onChange={(e) => setCurrentCAC(Number(e.target.value))}
                    className="mt-2"
                  />
                </div>
              </CardContent>
            </Card>

            {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
            <Card className="p-8 bg-gradient-to-br from-green-50 to-blue-50 border-2 border-green-200">
              <CardHeader>
                <CardTitle className="flex items-center gap-3 text-green-700">
                  <TrendingUp className="w-6 h-6" />
                  –í–∞—à–∞ —ç–∫–æ–Ω–æ–º–∏—è —Å Telegram Mini Apps
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <div className="text-sm text-gray-600">–ù–æ–≤—ã–π CAC</div>
                    <div className="text-2xl font-bold text-green-600">‚ÇΩ{savings.newCAC}</div>
                  </div>
                  <div>
                    <div className="text-sm text-gray-600">–≠–∫–æ–Ω–æ–º–∏—è —Å –∫–ª–∏–µ–Ω—Ç–∞</div>
                    <div className="text-2xl font-bold text-green-600">‚ÇΩ{savings.savingsPerCustomer}</div>
                  </div>
                  <div>
                    <div className="text-sm text-gray-600">–≠–∫–æ–Ω–æ–º–∏—è –≤ –º–µ—Å—è—Ü</div>
                    <div className="text-2xl font-bold text-green-600">‚ÇΩ{savings.monthlySavings.toLocaleString()}</div>
                  </div>
                  <div>
                    <div className="text-sm text-gray-600">–≠–∫–æ–Ω–æ–º–∏—è –≤ –≥–æ–¥</div>
                    <div className="text-3xl font-bold text-green-600">‚ÇΩ{savings.yearlySavings.toLocaleString()}</div>
                  </div>
                </div>
                <div className="pt-4 border-t">
                  <div className="text-center">
                    <div className="text-sm text-gray-600">ROI –≤ –ø–µ—Ä–≤—ã–π –≥–æ–¥</div>
                    <div className="text-4xl font-bold text-purple-600">{savings.roi}%</div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
      <section className="py-8 bg-gray-50 sticky top-0 z-40">
        <div className="max-w-6xl mx-auto px-4">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-2xl font-bold text-gray-900">–í—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</h2>
            <div className="flex gap-3">
              <Button
                variant="outline"
                size="sm"
                onClick={generatePDF}
                className="flex items-center gap-2"
              >
                <Download className="w-4 h-4" />
                PDF
              </Button>
              <Button
                variant="outline"
                size="sm"
                onClick={shareAdvantages}
                className="flex items-center gap-2"
              >
                <Share className="w-4 h-4" />
                –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
              </Button>
            </div>
          </div>

          {/* –ü–æ–∏—Å–∫ */}
          <div className="mb-6">
            <Input
              placeholder="–ü–æ–∏—Å–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="max-w-md"
            />
          </div>

          {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
          <div className="flex flex-wrap gap-2">
            {categories.map((category) => (
              <Button
                key={category.id}
                variant={selectedCategory === category.id ? 'default' : 'outline'}
                size="sm"
                onClick={() => setSelectedCategory(category.id)}
                className="flex items-center gap-2"
              >
                {category.icon}
                {category.name} ({category.count})
              </Button>
            ))}
          </div>
        </div>
      </section>

      {/* –°–ø–∏—Å–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ */}
      <section className="py-16">
        <div className="max-w-6xl mx-auto px-4">
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredAdvantages.map((advantage, index) => (
              <motion.div
                key={advantage.id}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.1 }}
              >
                <Card className={`h-full transition-all hover:shadow-xl ${
                  advantage.isPopular 
                    ? 'border-2 border-yellow-300 bg-gradient-to-br from-yellow-50 to-orange-50' 
                    : 'hover:shadow-lg'
                }`}>
                  <CardHeader>
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        {advantage.isPopular && (
                          <Badge className="mb-2 bg-yellow-400 text-yellow-900">
                            ‚≠ê –ü–æ–ø—É–ª—è—Ä–Ω–æ–µ
                          </Badge>
                        )}
                        <CardTitle className="text-lg leading-tight">
                          {advantage.title}
                        </CardTitle>
                      </div>
                      <Button
                        variant="ghost"
                        size="sm"
                        onClick={() => toggleFavorite(advantage.id)}
                        className="p-1"
                      >
                        <Heart
                          className={`w-5 h-5 ${
                            favorites.includes(advantage.id)
                              ? 'fill-red-500 text-red-500'
                              : 'text-gray-400'
                          }`}
                        />
                      </Button>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <p className="text-gray-600 mb-4">{advantage.description}</p>
                    <div className="space-y-2">
                      <div className="flex items-center gap-2">
                        <CheckCircle className="w-4 h-4 text-green-500" />
                        <span className="text-sm font-semibold text-green-700">
                          {advantage.impact}
                        </span>
                      </div>
                      {advantage.roi && (
                        <div className="flex items-center gap-2">
                          <BarChart3 className="w-4 h-4 text-blue-500" />
                          <span className="text-sm font-semibold text-blue-700">
                            ROI: {advantage.roi}
                          </span>
                        </div>
                      )}
                    </div>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>

          {filteredAdvantages.length === 0 && (
            <div className="text-center py-12">
              <div className="text-6xl mb-4">üîç</div>
              <h3 className="text-xl font-semibold mb-2">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
              <p className="text-gray-600">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é</p>
            </div>
          )}
        </div>
      </section>

      {/* CTA —Å–µ–∫—Ü–∏—è */}
      <section className="py-20 bg-gradient-to-r from-blue-600 to-purple-600 text-white">
        <div className="max-w-4xl mx-auto px-4 text-center">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
          >
            <h2 className="text-3xl md:text-4xl font-bold mb-6">
              –ì–æ—Ç–æ–≤—ã –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ —ç—Ç–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞?
            </h2>
            <p className="text-xl mb-8 text-blue-100">
              –ù–∞—á–Ω–∏—Ç–µ —ç–∫–æ–Ω–æ–º–∏—Ç—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è —Å Telegram Mini Apps –æ—Ç $300
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button 
                size="lg" 
                className="bg-white text-blue-600 hover:bg-gray-100 px-8 py-4"
                onClick={() => {
                  const message = encodeURIComponent(
                    `–ü—Ä–∏–≤–µ—Ç! –†–∞—Å—Å—á–∏—Ç–∞–ª —ç–∫–æ–Ω–æ–º–∏—é –Ω–∞ –≤–∞—à–µ–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µ: ‚ÇΩ${savings.yearlySavings.toLocaleString()}/–≥–æ–¥. –ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Telegram Mini App. –ú–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ?`
                  );
                  window.open(`https://t.me/balilegend?text=${message}`, '_blank');
                }}
              >
                <MessageCircle className="w-5 h-5 mr-2" />
                –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
              </Button>
              <Button 
                size="lg" 
                variant="outline"
                className="border-white text-white hover:bg-white hover:text-blue-600 px-8 py-4"
                onClick={() => window.location.href = '/modules'}
              >
                <Rocket className="w-5 h-5 mr-2" />
                –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–¥—É–ª–∏
              </Button>
            </div>
          </motion.div>
        </div>
      </section>
    </div>
  );
}